_____________________________________________________________
salam            khobi 123     456
----------------------------------
salam
----------------------------------
khobi
----------------------------------
123
----------------------------------
456
_____________________________________________________________
!monitor 123 1234 script { tesTo                     salam 

khoobi?
 }
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
 tesTo                     salam 

khoobi?
 
_____________________________________________________________
 !monitor rwx 123 1234 script { @rax= @rbx;                      

printf("ho");
 }
----------------------------------
!monitor
----------------------------------
rwx
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
 @rax= @rbx;                      

printf("ho");
 
_____________________________________________________________





!monitor 123 1234 script { tesTo                     salam 

khoobi?
 }
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
 tesTo                     salam 

khoobi?
 
_____________________________________________________________
 help    settings
----------------------------------
help
----------------------------------
settings
_____________________________________________________________
help    settings
----------------------------------
help
----------------------------------
settings
_____________________________________________________________
 !monitor 123 1234 script {salam}
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
salam
_____________________________________________________________
 !monitor 123 1234 script { salam}
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
 salam
_____________________________________________________________
 !monitor 123 1234 script {salam }
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
salam 
_____________________________________________________________
 !monitor 123 1234 script {-} script {salam } 
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
-
----------------------------------
script
----------------------------------
salam 
_____________________________________________________________
 !monitor 123 1234 script {-
 
 
 
 
 } script {salam } 
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
-
 
 
 
 
 
----------------------------------
script
----------------------------------
salam 
_____________________________________________________________
!command -flag1 -flag2 input {   value1   value2   }
----------------------------------
!command
----------------------------------
-flag1
----------------------------------
-flag2
----------------------------------
input
----------------------------------
   value1   value2   
_____________________________________________________________
combine    {first   part}  { second part } {third part}
----------------------------------
combine
----------------------------------
first   part
----------------------------------
 second part 
----------------------------------
third part
_____________________________________________________________
mix { spaces   inside }  and {no space}
----------------------------------
mix
----------------------------------
 spaces   inside 
----------------------------------
and
----------------------------------
no space
_____________________________________________________________
testcase1 testcase2 {  enclosed with spaces  }
----------------------------------
testcase1
----------------------------------
testcase2
----------------------------------
  enclosed with spaces  
_____________________________________________________________
!action -key1=value1 -key2=value2 {payload   data} 
----------------------------------
!action
----------------------------------
-key1=value1
----------------------------------
-key2=value2
----------------------------------
payload   data
_____________________________________________________________
cmd {first block} subsequent {second block} ending
----------------------------------
cmd
----------------------------------
first block
----------------------------------
subsequent
----------------------------------
second block
----------------------------------
ending
_____________________________________________________________
!start -fast {quick action} -secure {safe mode}
----------------------------------
!start
----------------------------------
-fast
----------------------------------
quick action
----------------------------------
-secure
----------------------------------
safe mode
_____________________________________________________________
simple   command    with {  embedded data   }
----------------------------------
simple
----------------------------------
command
----------------------------------
with
----------------------------------
  embedded data   
_____________________________________________________________
cmd1 cmd2 cmd3 {sequential commands}
----------------------------------
cmd1
----------------------------------
cmd2
----------------------------------
cmd3
----------------------------------
sequential commands
_____________________________________________________________
!launch -now -force {immediate start} && {verify} 
----------------------------------
!launch
----------------------------------
-now
----------------------------------
-force
----------------------------------
immediate start
----------------------------------
&&
----------------------------------
verify
_____________________________________________________________
   
!script    launch { @init(); } followed by {execute main;}
----------------------------------
!script
----------------------------------
launch
----------------------------------
 @init(); 
----------------------------------
followed
----------------------------------
by
----------------------------------
execute main;
_____________________________________________________________
cmd {simple} {sequence} -option
----------------------------------
cmd
----------------------------------
simple
----------------------------------
sequence
----------------------------------
-option
_____________________________________________________________
run -flag1 {data1} -flag2 {data2} -flag3 {data3}
----------------------------------
run
----------------------------------
-flag1
----------------------------------
data1
----------------------------------
-flag2
----------------------------------
data2
----------------------------------
-flag3
----------------------------------
data3
_____________________________________________________________
test -x -y -z {set1} and {set2} followed by {set3}
----------------------------------
test
----------------------------------
-x
----------------------------------
-y
----------------------------------
-z
----------------------------------
set1
----------------------------------
and
----------------------------------
set2
----------------------------------
followed
----------------------------------
by
----------------------------------
set3
_____________________________________________________________
init {first} then {second} && finally {third} 
----------------------------------
init
----------------------------------
first
----------------------------------
then
----------------------------------
second
----------------------------------
&&
----------------------------------
finally
----------------------------------
third
_____________________________________________________________
long command with {multiple parts in} {separate blocks} 
----------------------------------
long
----------------------------------
command
----------------------------------
with
----------------------------------
multiple parts in
----------------------------------
separate blocks
_____________________________________________________________
simple {standalone block}
----------------------------------
simple
----------------------------------
standalone block
_____________________________________________________________
trigger {script  } && -flag {option}   final
----------------------------------
trigger
----------------------------------
script  
----------------------------------
&&
----------------------------------
-flag
----------------------------------
option
----------------------------------
final
_____________________________________________________________
initiate --parameters { --data="complex value"; return 0;} and end
----------------------------------
initiate
----------------------------------
--parameters
----------------------------------
 --data="complex value"; return 0;
----------------------------------
and
----------------------------------
end
_____________________________________________________________
multi-step {process} && {handle} then {finalize}
----------------------------------
multi-step
----------------------------------
process
----------------------------------
&&
----------------------------------
handle
----------------------------------
then
----------------------------------
finalize
_____________________________________________________________
cmd -flag1 -flag2 {parameter} {another} part
----------------------------------
cmd
----------------------------------
-flag1
----------------------------------
-flag2
----------------------------------
parameter
----------------------------------
another
----------------------------------
part
_____________________________________________________________
test {unmatched brackets and inputs
----------------------------------
test
----------------------------------
unmatched brackets and inputs
_____________________________________________________________
{no command} just {brackets   here} 
----------------------------------
no command
----------------------------------
just
----------------------------------
brackets   here
_____________________________________________________________

     !monitor 123 1234 script { salam { } }


----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
 salam { } 
_____________________________________________________________
 !monitor 123 1234 script {salam { }}
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
salam { }
_____________________________________________________________
 !monitor 123 1234 script {{}} script {salam } 
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
{}
----------------------------------
script
----------------------------------
salam 
_____________________________________________________________
!run   multiple   {commands here; print("hello") }   now
----------------------------------
!run
----------------------------------
multiple
----------------------------------
commands here; print("hello") 
----------------------------------
now
_____________________________________________________________
execute    --option=value   --flag {do this}  &&  {do that}
----------------------------------
execute
----------------------------------
--option=value
----------------------------------
--flag
----------------------------------
do this
----------------------------------
&&
----------------------------------
do that
_____________________________________________________________
test   input     multiple { nested   {token1 token2}  token3  }
----------------------------------
test
----------------------------------
input
----------------------------------
multiple
----------------------------------
 nested   {token1 token2}  token3  
_____________________________________________________________
!example   with-symbols  { $var1   =   @func(); }  @end
----------------------------------
!example
----------------------------------
with-symbols
----------------------------------
 $var1   =   @func(); 
----------------------------------
@end
_____________________________________________________________
check  {brackets}without   spaces   {another}one
----------------------------------
check
----------------------------------
brackets
----------------------------------
without
----------------------------------
spaces
----------------------------------
another
----------------------------------
one
_____________________________________________________________
trigger    --conditionA  --conditionB  sequence {if(A) {exec B;}}
----------------------------------
trigger
----------------------------------
--conditionA
----------------------------------
--conditionB
----------------------------------
sequence
----------------------------------
if(A) {exec B;}
_____________________________________________________________
check -flag { first {nested} block } and another
----------------------------------
check
----------------------------------
-flag
----------------------------------
 first {nested} block 
----------------------------------
and
----------------------------------
another
_____________________________________________________________

cmd -opt1 --opt2 {multi-level { nesting  }  example }
----------------------------------
cmd
----------------------------------
-opt1
----------------------------------
--opt2
----------------------------------
multi-level { nesting  }  example 
_____________________________________________________________

prefix {command with {extra} spaces} suffix
----------------------------------
prefix
----------------------------------
command with {extra} spaces
----------------------------------
suffix
_____________________________________________________________
{edge case} with {close} but {mismatched }
----------------------------------
edge case
----------------------------------
with
----------------------------------
close
----------------------------------
but
----------------------------------
mismatched 
_____________________________________________________________

cmd1 {with spaces  }between  {tokens}
----------------------------------
cmd1
----------------------------------
with spaces  
----------------------------------
between
----------------------------------
tokens
_____________________________________________________________

execute     command --with-options {enclose {inner block} complete} 
----------------------------------
execute
----------------------------------
command
----------------------------------
--with-options
----------------------------------
enclose {inner block} complete
_____________________________________________________________
combine  --flags { group {of {nested} data} here }
----------------------------------
combine
----------------------------------
--flags
----------------------------------
 group {of {nested} data} here 
_____________________________________________________________

launch   operation {perform   task   with  details*&^%$#@! }
----------------------------------
launch
----------------------------------
operation
----------------------------------
perform   task   with  details*&^%$#@! 
_____________________________________________________________
{beginning}{middle}{end} as a story
----------------------------------
beginning
----------------------------------
middle
----------------------------------
end
----------------------------------
as
----------------------------------
a
----------------------------------
story
_____________________________________________________________
process   data {with   embedded {brackets} and symbols!@# }
----------------------------------
process
----------------------------------
data
----------------------------------
with   embedded {brackets} and symbols!@# 
_____________________________________________________________
{part1} {part2} {part3} followed by {part4}
----------------------------------
part1
----------------------------------
part2
----------------------------------
part3
----------------------------------
followed
----------------------------------
by
----------------------------------
part4
_____________________________________________________________
trigger   function {execute this {with nested} commands}
----------------------------------
trigger
----------------------------------
function
----------------------------------
execute this {with nested} commands
_____________________________________________________________
{first}{second}{third}{fourth} in order
----------------------------------
first
----------------------------------
second
----------------------------------
third
----------------------------------
fourth
----------------------------------
in
----------------------------------
order
_____________________________________________________________
invoke action {with parameters and special *&^%$#@! characters}
----------------------------------
invoke
----------------------------------
action
----------------------------------
with parameters and special *&^%$#@! characters
_____________________________________________________________
{alpha}{beta}{gamma} proceed
----------------------------------
alpha
----------------------------------
beta
----------------------------------
gamma
----------------------------------
proceed
_____________________________________________________________
launch command {multiple levels {of nested} structures}
----------------------------------
launch
----------------------------------
command
----------------------------------
multiple levels {of nested} structures
_____________________________________________________________
{start}{continue}{finish} the process
----------------------------------
start
----------------------------------
continue
----------------------------------
finish
----------------------------------
the
----------------------------------
process
_____________________________________________________________
execute   command {execute {inner} logic } finalize
----------------------------------
execute
----------------------------------
command
----------------------------------
execute {inner} logic 
----------------------------------
finalize
_____________________________________________________________

run    long command {with   spaces and symbols!@#$%^&*() }  
----------------------------------
run
----------------------------------
long
----------------------------------
command
----------------------------------
with   spaces and symbols!@#$%^&*() 
_____________________________________________________________

!inject  kernel!IoCreateFile script {

memcpy(" {                             buffer content @0x%x\n", @rdx);


}
----------------------------------
!inject
----------------------------------
kernel!IoCreateFile
----------------------------------
script
----------------------------------


memcpy(" {                             buffer content @0x%x\n", @rdx);



_____________________________________________________________
!hook  routine!KeWaitForSingleObject script { 

if (condition) {                              {   wait @timeout\n"," @rcx);}}

}
----------------------------------
!hook
----------------------------------
routine!KeWaitForSingleObject
----------------------------------
script
----------------------------------
 

if (condition) {                              {   wait @timeout\n"," @rcx);}}


_____________________________________________________________
!trace nt!ZwQuerySystemInformation script {

DbgPrint(" {                           {   system info: %p\n", @r8);   

}
----------------------------------
!trace
----------------------------------
nt!ZwQuerySystemInformation
----------------------------------
script
----------------------------------


DbgPrint(" {                           {   system info: %p\n", @r8);   


_____________________________________________________________
!monitor function!NtOpenProcess script {

log(" {                                   {   process opened: %d\n", @r9);


}
----------------------------------
!monitor
----------------------------------
function!NtOpenProcess
----------------------------------
script
----------------------------------


log(" {                                   {   process opened: %d\n", @r9);



_____________________________________________________________
!filter   nt!MmMapLockedPagesSpecifyCache script {

trace(" {                             {   mapping pages @%p\n", @r10);

}
----------------------------------
!filter
----------------------------------
nt!MmMapLockedPagesSpecifyCache
----------------------------------
script
----------------------------------


trace(" {                             {   mapping pages @%p\n", @r10);


_____________________________________________________________
!watch kernel!ObReferenceObjectByHandle script {

check(" {                             {   object handle: 0x%x\n","xxx" @r11);

}
----------------------------------
!watch
----------------------------------
kernel!ObReferenceObjectByHandle
----------------------------------
script
----------------------------------


check(" {                             {   object handle: 0x%x\n","xxx" @r11);


_____________________________________________________________
!watch kernel!ObReferenceObjectByHandle script { }{

check(" {                             {   object handle: 0x%x\n", @r11);

}
----------------------------------
!watch
----------------------------------
kernel!ObReferenceObjectByHandle
----------------------------------
script
----------------------------------
 
----------------------------------


check(" {                             {   object handle: 0x%x\n", @r11);


_____________________________________________________________
!watch kernel!ObReferenceObjectByHandle script { }{

check(" }  object handle: 0x%x\n", @r11);  

}
----------------------------------
!watch
----------------------------------
kernel!ObReferenceObjectByHandle
----------------------------------
script
----------------------------------
 
----------------------------------


check(" }  object handle: 0x%x\n", @r11);  


_____________________________________________________________
{block1}{block2}{block3} in sequence
----------------------------------
block1
----------------------------------
block2
----------------------------------
block3
----------------------------------
in
----------------------------------
sequence
_____________________________________________________________

!epthook nt!ExAllocatePoolWithTag script { 

printf(" {                                    {   hi2 ! :%llx\n", @rax);

}
----------------------------------
!epthook
----------------------------------
nt!ExAllocatePoolWithTag
----------------------------------
script
----------------------------------
 

printf(" {                                    {   hi2 ! :%llx\n", @rax);


_____________________________________________________________

!epthook nt!ExAllocatePoolWithTag script { 

printf(" {                                    {   hi ! :%llx\n", @rax);

}
----------------------------------
!epthook
----------------------------------
nt!ExAllocatePoolWithTag
----------------------------------
script
----------------------------------
 

printf(" {                                    }   hi ! :%llx\n", @rax);


_____________________________________________________________
command1 /* pre-command comment */  param1 param2 // inline comment
----------------------------------
command1
----------------------------------
param1
----------------------------------
param2
_____________________________________________________________
/* comment at start */command2 123 /* middle comment */ 456 
----------------------------------
command2
----------------------------------
123
----------------------------------
456
_____________________________________________________________
command3 789 { inner /* comment */ block } /* outer comment */ final
----------------------------------
command3
----------------------------------
789
----------------------------------
 inner /* comment */ block 
----------------------------------
final
_____________________________________________________________
!execute /*start*/ command /*ignored*/ {this part stays // comment inside } next
----------------------------------
!execute
----------------------------------
command
----------------------------------
this part stays // comment inside 
----------------------------------
next
_____________________________________________________________
// entire line comment
finalCommand 999 /* another comment */ {untouched /* inner */ block}
----------------------------------
finalCommand
----------------------------------
999
----------------------------------
untouched /* inner */ block
_____________________________________________________________
/* tricky */!run 1234 script /* inner */ {brackets should {remain}} end // finish
----------------------------------
!run
----------------------------------
1234
----------------------------------
script
----------------------------------
brackets should {remain}
----------------------------------
end
_____________________________________________________________
// comment at the start
/*!example 5678 script */ /*{preserve this block}*/ result
----------------------------------
result
_____________________________________________________________
/**/command4 { content /* inside */ untouched } // comment
----------------------------------
command4
----------------------------------
 content /* inside */ untouched 
_____________________________________________________________
/* remove this */ {block /* with comment*/} /* another comment */
----------------------------------
block /* with comment*/
_____________________________________________________________
simpleCommand  /* comment in the middle */ {final //comment inside} // end
----------------------------------
simpleCommand
----------------------------------
final //comment inside
_____________________________________________________________
/* complex */ command {nested {brackets /* and comments */ inside}  } end
----------------------------------
command
----------------------------------
nested {brackets /* and comments */ inside}  
----------------------------------
end
_____________________________________________________________
// mixed comments
!action 1 2 3 /*{should be removed}*/ result /*final*/
----------------------------------
!action
----------------------------------
1
----------------------------------
2
----------------------------------
3
----------------------------------
result
_____________________________________________________________
command5 /* multiple lines 
comment */ final // inline comment
----------------------------------
command5
----------------------------------
final
_____________________________________________________________
/* multiple lines 
comment */ command6  { /* inner block */ content } next // final comment
----------------------------------
command6
----------------------------------
 /* inner block */ content 
----------------------------------
next
_____________________________________________________________
/// full line comment
/*!ignore this*/ command7  {keep /* this comment */ block} // end
----------------------------------
command7
----------------------------------
keep /* this comment */ block
_____________________________________________________________
/* nested comments */ command8{content /* with nested */ parts} // final
----------------------------------
command8
----------------------------------
content /* with nested */ parts
_____________________________________________________________
_____________________________________________________________
/* nested comments */ command8{content /* with nested */ parts}com // final
----------------------------------
command8
----------------------------------
content /* with nested */ parts
----------------------------------
com
_____________________________________________________________
!operation /*start*/ { inner content } /* middle */final// finish
----------------------------------
!operation
----------------------------------
 inner content 
----------------------------------
final
_____________________________________________________________
// ignore everything
/*!skip this*/ /*{and this block}*/result //final
----------------------------------
result
_____________________________________________________________
/**/ complexCommand {keep /* special */ part}// ending comment/**/
----------------------------------
complexCommand
----------------------------------
keep /* special */ part
_____________________________________________________________
// full line comment
cmd1 param1 /*inline comment*/ param2
----------------------------------
cmd1
----------------------------------
param1
----------------------------------
param2
_____________________________________________________________
commandA // with a comment
----------------------------------
commandA
_____________________________________________________________
/*block comment*/cmd2                      { }arg1 arg2   
----------------------------------
cmd2
----------------------------------
arg1
----------------------------------
 
----------------------------------
arg2
_____________________________________________________________
cmd3 {block with // inline comment} next
----------------------------------
cmd3
----------------------------------
block with // inline comment
----------------------------------
next
_____________________________________________________________
// start comment
cmd4 123 /* another comment */ {block} end
----------------------------------
cmd4
----------------------------------
123
----------------------------------
block
----------------------------------
end
_____________________________________________________________
/*!skip this*/ cmd5 {content remains /* inside comment */} final
----------------------------------
cmd5
----------------------------------
content remains /* inside comment */
----------------------------------
final
_____________________________________________________________
cmd6 param /* ignore this */ {keep this block}
----------------------------------
cmd6
----------------------------------
param
----------------------------------
keep this block
_____________________________________________________________
// skip comment
cmd7 /* block */ next
----------------------------------
cmd7
----------------------------------
next
_____________________________________________________________
/* first comment */cmd8 {preserve this} last
----------------------------------
cmd8
----------------------------------
preserve this
----------------------------------
last
_____________________________________________________________

commandB param /*{don't remove this 


block}*/ param2
----------------------------------
commandB
----------------------------------
param
----------------------------------
param2
_____________________________________________________________
/*!skip*/ cmd9 param {block with // /*


*/ {} {} {} comment} final
----------------------------------
cmd9
----------------------------------
param
----------------------------------
block with // /*


*/ {} {} {} comment
----------------------------------
final
_____________________________________________________________
cmd10 param /* 


/*



middle */ param2
----------------------------------
cmd10
----------------------------------
param
----------------------------------
param2
_____________________________________________________________
cmd11 {keep /*
 special */ block} final
----------------------------------
cmd11
----------------------------------
keep /*
 special */ block
----------------------------------
final
_____________________________________________________________
// skip line
commandC {block} / * comment */ param
----------------------------------
commandC
----------------------------------
block
----------------------------------
/
----------------------------------
*
----------------------------------
*/
----------------------------------
param
_____________________________________________________________
cmd12 {start block} /* comment */ next / /
----------------------------------
cmd12
----------------------------------
start block
----------------------------------
next
----------------------------------
/
----------------------------------
/
_____________________________________________________________
cmd13 /* comment before */ {b




lock}/*>*?*/last
----------------------------------
cmd13
----------------------------------
b




lock
----------------------------------
last
_____________________________________________________________
commandD param1 /*comment*/ param2
----------------------------------
commandD
----------------------------------
param1
----------------------------------
param2

cmd14 {complex /* block */content} final
----------------------------------
cmd14
----------------------------------
complex /* block */content
----------------------------------
final
_____________________________________________________________
// full comment
commandE /* remove this */ param1
----------------------------------
commandE
----------------------------------
param1
_____________________________________________________________
cmd15 {nested /* comment */ block} result
----------------------------------
cmd15
----------------------------------
nested /* comment */ block
----------------------------------
result
_____________________________________________________________
/*!ignore*/ cmd16 param1 {keep /* nested   */ content}
----------------------------------
cmd16
----------------------------------
param1
----------------------------------
keep /* nested   */ content
_____________________________________________________________
cmd17 param/**/{block with comment // inside}
----------------------------------
cmd17
----------------------------------
param
----------------------------------
block with comment // inside
_____________________________________________________________


salam         //   test 123     456
----------------------------------
salam
_____________________________________________________________
!monitor 123 1234 script /*{ tesTo                     salam 

khoobi?
 }*/
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
_____________________________________________________________
!monitor 123 1234 script /*{ tesTo                     salam 

khoobi?
 }*/
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
_____________________________________________________________
!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?
 }*/ test
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
test
_____________________________________________________________
/**/!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?
 }*/ test
----------------------------------
!monitor
----------------------------------
123
----------------------------------
1234
----------------------------------
script
----------------------------------
test
_____________________________________________________________
/*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?
 }*/ test
---------------------------
test
_____________________________________________________________
/**//*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?
 }*/ test2
---------------------------
test2
_____________________________________________________________
/**//*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?
 }*/ test3
---------------------------
test3
_____________________________________________________________
///**//*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?
 }*/ test3
---------------------------
khoobi?
---------------------------
}*/
---------------------------
test3
_____________________________________________________________
///**//*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?
 //}*/ test3
---------------------------
khoobi?
_____________________________________________________________
///**//*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?//testttt
 //}*/ test4
---------------------------
khoobi?
_____________________________________________________________
///**//*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?//testttt
 //}*/ test3
---------------------------
khoobi?
_____________________________________________________________
///**//*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?/*//testttt*/
 //}*/ test3
---------------------------
khoobi?
_____________________________________________________________
///**//*!monitor 123 1234 script /*    { tesTo                     salam 

khoobi?/**///testttt/**/
 //}*/ test3
---------------------------
khoobi?